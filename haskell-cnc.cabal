Name:           haskell-cnc
Version:        0.1
License: LGPL
License-file:   LICENSE
Stability: Beta
Author:			Ryan Newton <rrnewton@gmail.com>
Maintainer:		Ryan Newton <rrnewton@gmail.com>
homepage: http://software.intel.com/en-us/articles/intel-concurrent-collections-for-cc/
Copyright: Copyright (c) 2009-2010 Intel Corporation
Synopsis: Library for parallel programming in the Intel Concurrent Collections paradigm.
Description: Intel (Concurrent Collections) CnC is a data-flow like
 deterministic parallel programming model, similar to
 stream-processing but in which nodes in the computation graph share data in tables.

Category: system
Cabal-Version: >=1.2.3

build-type: Simple

library
  build-depends:  base, mtl, containers, time, random, array, ghc-prim, extensible-exceptions, HUnit, QuickCheck
  -- Needed for the scaling.hs plotting script:
  --   HSH, gnuplot
  -- , judy>=0.2.2

  exposed-modules:  Intel.Cnc Intel.CncPure
--                    Intel.Cnc3
  extensions: CPP, 
       -- These extensions are needed for Cnc.hs
       FlexibleInstances, BangPatterns, MagicHash, ScopedTypeVariables, DeriveDataTypeable, MultiParamTypeClasses,
       -- And the following are needed for CncPure.hs:
       ExistentialQuantification, ScopedTypeVariables, BangPatterns, NamedFieldPuns, RecordWildCards

  GHC-Options: -O2 -threaded -DUSE_GMAP 
-- -Wall 
  install-includes: ntimes ntimes_minmedmax README.txt haskell_cnc.h Makefile install_environment_vars.sh 
                    default_opt_settings.sh runcnc run_all_tests.sh scaling.hs 
                    examples/hello_world.hs examples/mandel.hs examples/primes.hs examples/primes2.hs 
                    examples/sched_tree.hs examples/threadring_onestep.hs examples/threadring.hs 
                    examples/embarrassingly_par.hs examples/fib.hs examples/nbody.hs

  -- This seems to be completly ignored by cabal currently:
  -- Test testit
  --   type: library-1
  --   test-is: Intel.Cnc

Executable runAllTests
  Main-is:           runAllTests.hs
  Build-Depends:     base >= 3 && < 5, directory, process
  other-modules:  Intel.Cnc Intel.CncPure
  extensions: CPP
  GHC-Options: -O2 -threaded -DUSE_GMAP
-- Intel.CncUtil
